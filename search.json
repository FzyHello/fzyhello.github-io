[{"title":"AngularJs教程","path":"/2024/04/25/AngularJs教程/","content":"Google 开源的 前端 JS 结构化 框架 动态展示页面数据, 并与用户进行交互 AngularJS 特性(优点) 双向数据绑定 声明式依赖注入 解耦应用逻辑, 数据模型和视图 完善的页面指令 定制表单验证 Ajax 封装 入门 Demo语法详解 1234ng-app(指令) : 告诉 angular 核心它管理当前标签所包含的整个区域,并且会自动创建$rootScope根作用域对象 ng-model : 将当前输入框的值与谁关联(属性名:属性值), 并作为当前作用域对象($rootScope)的属性 ular 核心它管理当前标签所包含的整个区域,并且会自动创建$rootScope根作用域对象 ng-model : 将当前输入框的值与谁关联(属性名:属性值), 并作为当前作用域对象($rootScope)的属性 表达式：通常有一个返回值，可以放在任何需要值得地方，比如函数调用的参数，一个变量名，一个运算， 语句：通常表示一个完整的执行单位，一段完整的 js 可执行的代码，有的语句也可以用表达式来执行，叫做表达式语句。 区别：语句用封号结尾，有些语句我们没有加封号，比如 console.log 虽然我们没有加封号，但也是语句，因为 js 引擎会自动解析并且加上封号。 特例：if 语句，就不用加封号 可也是完整的语句。 入门案例1234567891011121314&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;&lt;meta charset=&quot;UTF-8&quot;&gt;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&lt;/head&gt;&lt;!-- 设置 ng-app 接管的区域 --&gt;&lt;body ng-app&gt;&lt;!-- ng-model 实现双向绑定 --&gt;&lt;input type=&quot;text&quot; ng-model=&quot;username&quot;&gt;&lt;div&gt;你输入的用户名为：&#123;&#123;username&#125;&#125;&lt;/div&gt;&lt;script src=&quot;../js/angular-1.5.5/angular.js&quot;&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","tags":["AngularJs"],"categories":["前端框架"]},{"title":"Hexo的基本配置","path":"/2024/04/24/Hexo的基本配置/","content":"123456789101112131415161718192021222324252627282930313233343536373839---\t#安装Nodejsnode -v\t#查看node版本npm -v\t#查看npm版本npm install -g cnpm --registry=http://registry.npm.taobao.org\t#安装淘宝的cnpm 管理器cnpm -v\t#查看cnpm版本cnpm install -g hexo-cli #安装hexo框架hexo -v\t#查看hexo版本mkdir blog\t#创建blog目录cd blog #进入blog目录sudo hexo init #生成博客 初始化博客hexo s\t#启动本地博客服务http://localhost:4000/\t#本地访问地址hexo n &quot;我的第一篇文章&quot; #创建新的文章 \\#返回blog目录hexo clean #清理hexo g #生成\\#Github创建一个新的仓库 YourGithubName.github.iocnpm install --save hexo-deployer-git #在blog目录下安装git部署插件\\----\\#配置_config.yml \\-----\t# Deployment\t## Docs: https://hexo.io/docs/deployment.html\tdeploy: type: git repo: https://github.com/YourGithubName/YourGithubName.github.io.git branch: master\\-----hexo d\t#部署到Github仓库里https://YourGithubName.github.io/ #访问这个地址可以查看博客 git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia #下载yilia主题到本地\\#修改hexo根目录下的 _config.yml 文件 ： theme: yiliahexo c\t#清理一下hexo g\t#生成hexo d\t#部署到远程Github仓库https://YourGithubName.github.io/ #查看博客","tags":["博客配置"]}]